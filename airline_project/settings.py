"""
Django settings for airline_project project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config, Csv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost,127.0.0.1', cast=Csv())


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party apps
    'rest_framework',
    'corsheaders',
    'django_extensions',
    'drf_spectacular',

    # Local apps
    'airplanes',
    'flights',
    'reservations',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # CORS middleware - must be before CommonMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'airline_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'airline_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config('DB_ENGINE', default='django.db.backends.postgresql'),
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST', default='localhost'),
        'PORT': config('DB_PORT', default='5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Django REST Framework
# https://www.django-rest-framework.org/api-guide/settings/
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'airline_project.pagination.CustomPageNumberPagination',
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
}

# CORS Settings
# https://github.com/adamchainz/django-cors-headers
CORS_ALLOW_ALL_ORIGINS = DEBUG  # Only allow all origins in development
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

# API Documentation with drf-spectacular
# https://drf-spectacular.readthedocs.io/
SPECTACULAR_SETTINGS = {
    'TITLE': 'Airline Management System API',
    'DESCRIPTION': 'API for managing airplanes, flights, and reservations',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}


# Email Configuration
# https://docs.djangoproject.com/en/5.2/topics/email/
# Used for sending reservation confirmation emails to passengers

# EMAIL_BACKEND: Determines how emails are sent
# - 'console': Prints emails to console (for development/testing)
# - 'smtp': Sends real emails via SMTP server (for production)
EMAIL_BACKEND = config(
    'EMAIL_BACKEND',
    default='django.core.mail.backends.console.EmailBackend'  # Default: print to console
    # default='django.core.mail.backends.smtp.EmailBackend'  # Default: use SMTP
)

# SMTP server settings (used when EMAIL_BACKEND is 'smtp')
# These settings are for sending real emails (e.g., Gmail, SendGrid, etc.)
EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')  # SMTP server address
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)  # SMTP port (587 for TLS)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)  # Use TLS encryption
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')  # Your email address
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')  # Your email password/app password

# Default "From" email address for all outgoing emails
DEFAULT_FROM_EMAIL = config(
    'DEFAULT_FROM_EMAIL',
    default='noreply@airline.com'
)

"""
EMAIL CONFIGURATION MODES:

1. DEVELOPMENT MODE (Default - Console Backend):
   - Emails are printed to the console/terminal
   - No actual emails are sent
   - Good for testing without email server
   - Set EMAIL_BACKEND='django.core.mail.backends.console.EmailBackend'

2. PRODUCTION MODE (SMTP Backend):
   - Real emails are sent via SMTP server
   - Requires valid SMTP credentials
   - Example for Gmail:
     * EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
     * EMAIL_HOST='smtp.gmail.com'
     * EMAIL_PORT=587
     * EMAIL_USE_TLS=True
     * EMAIL_HOST_USER='your-email@gmail.com'
     * EMAIL_HOST_PASSWORD='your-app-password'  # Not your regular password!

   Note: For Gmail, you need to create an "App Password":
   1. Go to Google Account settings
   2. Security → 2-Step Verification → App passwords
   3. Generate a new app password for "Mail"
   4. Use that password in EMAIL_HOST_PASSWORD

3. OTHER SERVICES:
   - SendGrid: Use their SMTP settings + API key
   - Mailgun: Use their SMTP settings + API key
   - AWS SES: Use AWS SES SMTP settings
"""
